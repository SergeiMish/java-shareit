CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS item (
                                    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                    name VARCHAR(255) NOT NULL,
                                    description VARCHAR(1000) NOT NULL,
                                    available BOOLEAN NOT NULL,
                                    owner_id BIGINT,
                                    CONSTRAINT pk_item PRIMARY KEY (id),
                                    CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS bookings (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                        item_id BIGINT NOT NULL,
                                        booker_id BIGINT NOT NULL,
                                        start_date TIMESTAMP NOT NULL,
                                        end_date TIMESTAMP NOT NULL,
                                        status VARCHAR(10) NOT NULL,
                                        CONSTRAINT pk_booking PRIMARY KEY (id),
                                        FOREIGN KEY (item_id) REFERENCES item(id),
                                        FOREIGN KEY (booker_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS comments (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                        item_id BIGINT NOT NULL,
                                        user_id BIGINT NOT NULL,
                                        text VARCHAR(1000) NOT NULL,
                                        created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                        CONSTRAINT pk_comment PRIMARY KEY (id),
                                        FOREIGN KEY (item_id) REFERENCES item(id),
                                        FOREIGN KEY (user_id) REFERENCES users(id)
);